"""dunno

Revision ID: b942729ab118
Revises: f2b6a45d594a
Create Date: 2025-05-05 18:57:28.272222

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b942729ab118"
down_revision = "f2b6a45d594a"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email_address", sa.String(length=120), nullable=False),
        sa.Column("password_hash", sa.String(length=128), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email_address"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "job",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("location", sa.String(length=100), nullable=False),
        sa.Column("category", sa.String(length=100), nullable=False),
        sa.Column("company", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("url", sa.String(length=200), nullable=False),
        sa.Column("date_posted", sa.String(length=20), nullable=False),
        sa.Column("salary", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("favorite", sa.Boolean(), nullable=True),
        sa.Column("owner_user_id", sa.Integer(), nullable=True),
        sa.Column(
            "date_populated",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["owner_user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.drop_constraint("jobs_city_id_fkey", "jobs", type_="foreignkey")
    op.drop_constraint("jobs_category_id_fkey", "jobs", type_="foreignkey")
    op.drop_constraint("favorites_job_id_fkey", "favorites", type_="foreignkey")
    op.drop_constraint("favorites_user_id_fkey", "favorites", type_="foreignkey")
    op.drop_table("cities")
    op.drop_table("favorites")
    op.drop_table("regions")
    op.drop_table("jobs")
    op.drop_table("users")
    op.drop_table("categories")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('categories_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("parent_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"], ["categories.id"], name="categories_parent_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="categories_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "users",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('users_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "username", sa.VARCHAR(length=50), autoincrement=False, nullable=False
        ),
        sa.Column(
            "email_address", sa.VARCHAR(length=120), autoincrement=False, nullable=False
        ),
        sa.Column(
            "password_hash", sa.VARCHAR(length=128), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        sa.UniqueConstraint("email_address", name="users_email_address_key"),
        sa.UniqueConstraint("username", name="users_username_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "jobs",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('jobs_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("title", sa.VARCHAR(length=200), autoincrement=False, nullable=False),
        sa.Column(
            "company", sa.VARCHAR(length=200), autoincrement=False, nullable=False
        ),
        sa.Column("url", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "date_posted", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("salary", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("email", sa.VARCHAR(length=120), autoincrement=False, nullable=True),
        sa.Column("city_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("category_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "date_populated",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["category_id"], ["categories.id"], name="jobs_category_id_fkey"
        ),
        sa.ForeignKeyConstraint(["city_id"], ["cities.id"], name="jobs_city_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="jobs_pkey"),
        sa.UniqueConstraint("url", name="jobs_url_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "regions",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('regions_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="regions_pkey"),
        sa.UniqueConstraint("name", name="regions_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "favorites",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("job_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["job_id"], ["jobs.id"], name="favorites_job_id_fkey"),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="favorites_user_id_fkey"
        ),
    )
    op.create_table(
        "cities",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("region_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["region_id"], ["regions.id"], name="cities_region_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="cities_pkey"),
    )
    op.drop_table("job")
    op.drop_table("user")
    # ### end Alembic commands ###
